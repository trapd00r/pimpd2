=pod

=head1 NAME

pimpd2.conf - Perl Interface for the  Music Player Daemon 2 configuration file

=head1 DESCRIPTION

pimpd2.conf is the configuration file for pimpd2(1). Pimpd2 first searches for it
at ~/.config/pimpd2/pimpd2.conf then at ~/.pimpd2.conf then at ./pimpd2.conf and
finally at /etc/pimpd2.conf.

Lines beginning with a '#' character are comments. All other non-empty lines
specify the parameter name and parameter value.
The configuration file is, and have to be, valid Perl code. This gives a lot of
power to the end user, but it also allows for fuckups.

Please dont fuckup.

=head1 ENVIRONMENT

=over 8

=item $music_directory

Music directory, as specified in mpd.conf

=item $playlist_directory

Playlist directory, as specified in mpd.conf

=item $target_directory

Directory where songs and albums will be copied to when using the --copy or
--copy-album flags.

=item $loved_database

File where the loved songs will be stored.

=item $mpd_host

The host where MPD is running.

=item $mpd_port

The port MPD listens on.

=item $mpd_user

The MPD user.

=item $mpd_pass

The password for the MPD user.

=item $ssh_host, $ssh_port, $ssh_user

Used by the 'copy' functions.

=item $c_player, @c_player_opts

The media player to use for local playback of remote streams.
Defaults to mplayer with zero options.

=item $c_player_url

The URL/IP adress of your MPD httpd/icecast stream.

=back

=cut

our $music_directory    = "/mnt/Music_1";
our $playlist_directory = "$music_directory/Playlists";
our $target_directory   = "$ENV{HOME}/ToTransfer";
our $loved_database     = "$ENV{XDG_DATA_HOME}/pimpd2/pimpd2.db";

# if undef, defaults to localhost
our $mpd_host     = $ENV{MPD_HOST} // undef;
our $mpd_port     = $ENV{MPD_PORT} // 6600;
our $mpd_pass     = $ENV{MPD_PASS} // undef;
our $mpd_user     = $ENV{MPD_USER} // undef;

our $ssh_host     = $mpd_host;
our $ssh_port     = 19216;
our $ssh_user     = $mpd_user;

our $c_player         = 'mplayer';
our @c_player_opts    = undef;
our $c_player_url     = 'http://192.168.1.100:9999';


=head1 COLORS

=over 8

=item ANSI Colors

The ANSI colors are specified using their index value, ranging from 0 - 15.

=item Extended colors

Every color is specified using colornameN syntax, where colorname might be
purple, and N is an integer.
These colors are available:

  color   range
  --------------
  red     1 - 4
  green   1 - 28
  blue    1 - 17
  yellow  1 - 18
  orange  1 - 5
  purple  1 - 30
  magenta 1 - 26
  cyan    1 - 24
  gray    1 - 24

You can specify attributes instead of colors:

  bold
  blink
  italic
  underline
  reverse

=back

=cut

our $c_extended_colors = 1;
our $c_ansi_colors     = 0;


our @c = (2 .. 16);

if($c_extended_colors) {
  $c[0]  = 'green8';
  $c[1]  = 'purple14';
  $c[2]  = 'yellow12';
  $c[3]  = 'yellow14';
  $c[4]  = 'blue5';
  $c[5]  = 'red1';
  $c[6]  = 'yellow17';
  $c[7]  = 'magenta25';
  $c[8]  = 'orange1';
  $c[9]  = 'clear';
  $c[10] = 'green27';
  $c[11] = 'green26';
  $c[12] = 'cyan19';
  $c[13] = 'blue10';
  $c[14] = 'grey18';
  $c[15] = 'green16';
}

=head1 FILES

=over 8

=item ~/.configs/pimpd2/pimpd2.conf

User configuration file.

=item /etc/pimpd2.conf

Global configuration file.

=back

=head1 SEE ALSO

pimpd2(1), mpd(1)

=cut

1;

# vim: set ft=perl:
