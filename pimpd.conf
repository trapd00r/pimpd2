# vim: set ft=perl:
## pimpd configuration file
## Location should be $XDG_CONFIG_HOME/pimpd/pimpd.conf or /etc/pimpd.conf

our $music_directory    = '/mnt/Music_1';       # as specified in mpd.conf
our $playlist_directory = "$music_directory/Playlists"; # as specified in mpd.conf

## If genre tag AND user supplied argument is missing, use the fallback
our $fallback_playlist = 'random';

## Used for history. Use standard unix tools to have fun with it.
## i.e; for x in $(tail -15 /mnt/Music_1/Playlists/history.m3u); \
##      do cp /mnt/Music_1/$x /mnt/mp3; done
## to copy the 15 latest tracks to your mp3-player
our $history_playlist  = 'loved.history';

## Default location to copy tracks to, if no argument is supplied
our $target_directory = "$ENV{HOME}";

## Needed if you run MPD on another host
our $mpd_host     = $ENV{MPD_HOST} // undef; # defaults to localhost
our $mpd_port     = $ENV{MPD_PORT} // 6600;
our $mpd_pass     = $ENV{MPD_PASS} // undef;
our $mpd_user     = $ENV{MPD_USER} // undef;

our $ssh_host     = $mpd_host;
our $ssh_port     = 19216;
our $ssh_user     = $mpd_user;

## Player and options that will be used for local playback
our $player         = 'mplayer';
our @player_opts    = undef;
#our @player_opts    = (' -cache 1024', ' -cache-min 100');
## Define url/ip of your MPD httpd/icecast output here
our $player_stream  = undef;

## Command used for monitoring in daemonized mode
#   stumpwm: 'stumpish echo'
# ratpoison: 'ratpoison -c echo'

our $daemon_cmd  = undef;
#our $daemon_cmd = 'dzen';

our $dzen_font = 'fixed';
our $dzen_cmd  = "dzen2 -p 5 -bg '#0e0e0e' -fg '#ffffff' -fn $dzen_font";

## Color support
our $opt_color   = 1; # use colors, 1 to enable
our $color256    = 1; # extended colors disabled, 1 to enable
## You can specify colorschemes this way
#our $colorscheme = 'master'; #

## Default ANSI escape sequences most terms can handle
# FIXME
our @c;
$c[0]  = "\e[31m";    # red
$c[1]  = "\e[31;1m";  # bright red
$c[2]  = "\e[32m";    # green
$c[3]  = "\e[32;1m";  # bright green
$c[4]  = "\e[33m";    # yellow
$c[5]  = "\e[34m";    # blue
$c[6]  = "\e[34;1m";  # bright blue
$c[7]  = "\e[36m";    # cyan
$c[8]  = "\e[36;1m";  # bright cyan
$c[9]  = "\e[0m";     # default
$c[10] = "\e[33;1m";  # bright green
$c[11] = "\e[35m";    # magenta
$c[12] = "\e[35;1m";  # bright magenta
$c[13] = "\e[30m";    # black
$c[14] = "\e[30;1m";  # bright black
$c[15] = "\e[1m";     # bold

=head2 Available colors

Every color is specified using colornameN syntax, where colorname might be
purple, and N is an integer.
These colors are available:

  color   range
  --------------
  red     1 - 4
  green   1 - 28
  blue    1 - 17
  yellow  1 - 18
  orange  1 - 5
  purple  1 - 30
  magenta 1 - 26
  cyan    1 - 24
  gray    1 - 24

You can specify attributes instead of colors:

  bold
  blink
  italic
  underline
  reverse

=cut

if($color256 == 1) {
  $c[0]  = 'green8';
  $c[1]  = 'purple14';
  $c[2]  = 'yellow12';
  $c[3]  = 'yellow14';
  $c[4]  = 'blue5';
  $c[5]  = 'red1';
  $c[6]  = 'yellow17';
  $c[7]  = 'magenta25';
  $c[8]  = 'orange1';
  $c[9]  = 'clear';
  $c[10] = 'green27';
  $c[11] = 'green26';
  $c[12] = 'cyan19';
  $c[13] = 'blue10';
  $c[14] = 'grey18';
  $c[15] = 'green16';
}

if($colorscheme eq 'greyscale') {
  $c[0]  = "grey1";
  $c[1]  = "grey2";
  $c[2]  = "grey3";
  $c[3]  = "grey4";
  $c[4]  = "grey5";
  $c[5]  = "grey6";
  $c[6]  = "grey7";
  $c[7]  = "grey8";
  $c[8]  = "grey9";
  $c[9]  = "grey10";
  $c[10] = "grey11";
  $c[11] = "grey12";
  $c[12] = "grey13";
  $c[13] = "grey14";
  $c[14] = "grey15";
  $c[15] = "\e[1m";
}

our $pidfile_daemon = '/tmp/pimpd_daemon.pid';
our $pidfile_pimpd  = '/tmp/pimpd_player_parent.pid';
our $pidfile_player = '/tmp/pimpd_player.pid';

1;
